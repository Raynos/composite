{
  "name": "testling",
  "description": "write tests for browser code",
  "version": "0.2.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/testling.git"
  },
  "main": "index.js",
  "browserify": "browser.js",
  "bin": {
    "testling": "bin/cmd.js"
  },
  "keywords": [
    "test",
    "browser",
    "headless"
  ],
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "install": "browserify node_modules/schoolbus/proxy.js -o static/proxy.js"
  },
  "dependencies": {
    "bouncy": "~1.3.1",
    "ecstatic": "~0.1.6",
    "browser-launcher": "~0.0.2",
    "jsonify": "~0.0.0",
    "schoolbus": "~0.0.1",
    "domready": "~0.2.11",
    "optimist": "~0.3.4",
    "mkdirp": "~0.3.3",
    "tap": "~0.2.5",
    "browserify": "~1.13.3",
    "shoe": "~0.0.2",
    "event-stream": "~2.0.4",
    "JSONStream": "~0.3.0",
    "request": "~2.9.202",
    "promzard": "~0.1.5",
    "pw": "~0.0.3"
  },
  "engines": {
    "node": ">=0.6"
  },
  "license": "MIT/X11",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "# testling\n\nWrite tests for the browser or node.\n\nRun them with local browsers or hosted browsers from\n[testling.com](http://testling.com).\n\n# example\n\nJust write a simple test:\n\n``` js\nvar test = require('testling');\n\ntest('json parse', function (t) {\n    t.same(JSON.parse('[1,2]'), [1,2]);\n    t.log('beep boop');\n    t.end();\n});\n```\n\nthen run it with a local browser:\n\n```\n$ testling example/test.js --browser=chrome\n>> beep boop\nTAP version 13\n# json parse\nok 1 should be equivalent\n\n1..1\n# tests 1\n# pass  1\n\n# ok\n```\n\nYour local browsers will be detected using\n[browser-launcher](https://github.com/substack/browser-launcher).\n\nTo see a list of detected local browsers, do `testling list`:\n\n```\n$ testling list\nchrome/17.0.963.12\nchromium/18.0.1025.168\nphantom/1.4.0\nfirefox/12.0\n```\n\nTo run your test on remote testling browsers, first open a testling tunnel:\n\n```\n$ testling tunnel\n# ssh -NR 57594:localhost:54046 me@example.com\nEnter passphrase for key '/home/substack/.ssh/id_dsa': \n\n```\n\nthen do:\n\n```\n$ testling example/test.js --browser=testling.chrome/12.0\n>> beep boop\nTAP version 13\n# json parse\nok 1 should be equivalent\n\n1..1\n# tests 1\n# pass  1\n\n# ok\n```\n\n# test api\n\n``` js\nvar test = require('testling')\n```\n\nThe test api is just the [node-tap](https://github.com/isaacs/node-tap) api\nplus:\n\n## t.createWindow(uri, vars, cb)\n\nReturn a [schoolbus](https://github.com/substack/schoolbus) object to drive\naround web pages.\n\n## t.log(msg)\n\nLog a message to the output.\n\n# command-line usage\n\n```\nUsage:\n\n  testling tunnel\n  testling list\n  testling OPTIONS [test files]\n\ntestling tunnel\n\n  Open a testling ssh tunnel. This step is necessary before using testling\n  browsers.\n  \ntestling list\n\n  List local available browsers.\n\ntestling OPTIONS [test files]\n\n  Run the test files in the given browser.\n  \n  OPTIONS:\n\n    --browser   Run the tests with this browser. Prepend 'testling.' to run your\n                tests in a testling remote browser.\n                Full browser list: http://testling.com/browsers.json\n\n    --headless  For local browsers, run in headless mode.\n                Requires that you have the `Xvfb` command in $PATH.\n\n```\n\n# install\n\nWith [npm](http://npmjs.org) just do:\n\n```\nnpm install -g testling\n```\n\n![attack of the testlings!](http://substack.net/images/browsers/war_of_the_browsers.png)\n",
  "_id": "testling@0.2.3",
  "_from": "testling@0.2.3"
}
